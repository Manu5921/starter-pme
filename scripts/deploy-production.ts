#!/usr/bin/env tsx

/**
 * üöÄ Script de D√©ploiement Production
 * Website Builder Platform
 */

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('üöÄ D√âPLOIEMENT PRODUCTION - Website Builder Platform');
console.log('====================================================\n');

// V√©rifications pr√©alables
console.log('üîç V√©rifications pr√©alables...');

// 1. V√©rifier que nous sommes bien sur la branche principale
try {
  const currentBranch = execSync('git branch --show-current', { encoding: 'utf8' }).trim();
  if (currentBranch !== 'main' && currentBranch !== 'master') {
    console.warn(`‚ö†Ô∏è  Attention : Vous √™tes sur la branche "${currentBranch}". Recommand√© : main/master`);
  } else {
    console.log(`‚úÖ Branche actuelle : ${currentBranch}`);
  }
} catch (error) {
  console.error('‚ùå Erreur lors de la v√©rification de la branche Git');
}

// 2. V√©rifier les variables d'environnement production
const envProdPath = path.join(process.cwd(), '.env.production');
if (!fs.existsSync(envProdPath)) {
  console.log('‚ö†Ô∏è  Fichier .env.production non trouv√©');
  console.log('üìã √âtapes pour configurer la production :');
  console.log('   1. Copier .env.production.template vers .env.production');
  console.log('   2. Remplir les variables (DATABASE_URL, BETTER_AUTH_SECRET, etc.)');
  console.log('   3. Relancer ce script');
  process.exit(1);
}

console.log('‚úÖ Fichier .env.production trouv√©');

// 3. V√©rifier Node.js version
const nodeVersion = process.version;
const majorVersion = parseInt(nodeVersion.slice(1).split('.')[0]);
if (majorVersion < 20) {
  console.error(`‚ùå Node.js ${nodeVersion} trop ancien. Minimum requis: v20.0.0`);
  console.log('üí° Solution : nvm use 24 && npm install');
  process.exit(1);
}

console.log(`‚úÖ Node.js ${nodeVersion} (compatible)`);

// 4. Tests avant d√©ploiement
console.log('\nüß™ Tests avant d√©ploiement...');

try {
  console.log('   ‚Üí Test de build...');
  execSync('npm run build', { stdio: 'pipe' });
  console.log('   ‚úÖ Build r√©ussi');
} catch (error) {
  console.error('   ‚ùå √âchec du build');
  console.error('   üí° R√©soudre les erreurs de build avant d√©ploiement');
  process.exit(1);
}

try {
  console.log('   ‚Üí Tests finaux...');
  execSync('npm run test:final', { stdio: 'pipe' });
  console.log('   ‚úÖ Tests r√©ussis');
} catch (error) {
  console.warn('   ‚ö†Ô∏è  Tests √©chou√©s - d√©ploiement possible mais risqu√©');
}

// 5. Informations de d√©ploiement
console.log('\nüìä Informations de d√©ploiement');
console.log('================================');

const packageJson = JSON.parse(fs.readFileSync(path.join(process.cwd(), 'package.json'), 'utf8'));
console.log(`üì¶ Projet : ${packageJson.name} v${packageJson.version}`);

// Compter les fichiers principaux
const appDir = path.join(process.cwd(), 'app');
const componentsDir = path.join(process.cwd(), 'components');
const appFiles = fs.existsSync(appDir) ? fs.readdirSync(appDir, { recursive: true }).length : 0;
const componentFiles = fs.existsSync(componentsDir) ? fs.readdirSync(componentsDir, { recursive: true }).length : 0;

console.log(`üìÅ Fichiers app/ : ${appFiles}`);
console.log(`üß© Composants : ${componentFiles}`);

// 6. Instructions de d√©ploiement
console.log('\nüéØ PROCHAINES √âTAPES DE D√âPLOIEMENT');
console.log('==================================');
console.log('');
console.log('1. üóÑÔ∏è  CONFIGURER BASE DE DONN√âES NEON :');
console.log('   ‚Üí Aller sur https://neon.tech');
console.log('   ‚Üí Cr√©er un projet "website-builder-prod"');
console.log('   ‚Üí Copier la DATABASE_URL dans .env.production');
console.log('');
console.log('2. üîê G√âN√âRER BETTER_AUTH_SECRET :');
console.log('   ‚Üí Utiliser : openssl rand -base64 32');
console.log('   ‚Üí Ou g√©n√©rer en ligne : https://generate-secret.vercel.app/32');
console.log('');
console.log('3. üöÄ D√âPLOYER SUR VERCEL :');
console.log('   ‚Üí Aller sur https://vercel.com/new');
console.log('   ‚Üí Importer ce repository GitHub');
console.log('   ‚Üí Configurer les variables d\'environnement');
console.log('   ‚Üí Cliquer "Deploy"');
console.log('');
console.log('4. ‚úÖ TESTER EN PRODUCTION :');
console.log('   ‚Üí https://ton-site.vercel.app/');
console.log('   ‚Üí https://ton-site.vercel.app/demo');
console.log('   ‚Üí https://ton-site.vercel.app/dashboard');
console.log('');

console.log('üéâ Pr√™t pour le d√©ploiement !');
console.log('üìã Suivre le guide : DEPLOYMENT_GUIDE.md');
console.log('');
console.log('üí° Une fois d√©ploy√©, tester toutes les fonctionnalit√©s');
console.log('üìä M√©triques attendues : Page load < 3s, SEO > 90/100');